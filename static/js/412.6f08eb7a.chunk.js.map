{"version":3,"file":"static/js/412.6f08eb7a.chunk.js","mappings":"gNAmBA,SAASA,EAAUC,GACjB,IAQIC,EAAKD,EAAIA,EAEb,OAAOA,EAVC,EAAM,GAWV,OAASC,EACTD,EAXI,EAAM,GAYR,MAAQC,EAAK,IAAMD,EAAI,IACvBA,EAZE,GAEC,KAAS,IAWLC,EAVJ,MAAU,KAUID,EATd,MAAU,KAUX,KAAOA,EAAIA,EAAI,MAAQA,EAAI,KACpC,CAkID,IAAME,EAAqBC,OAAOC,OAAO,CACvCC,UAAW,KACXC,UAvKF,SAAmBN,GACjB,IAAIO,EAAI,UACR,OAAKP,GAAK,GAAK,EACCA,EAAIA,IAAMO,EAAI,GAAKP,EAAIO,GAA9B,GACF,KAAQP,GAAK,GAAKA,IAAMO,EAAI,GAAKP,EAAIO,GAAK,EAClD,EAmKCC,OAjKF,SAAgBR,GACd,IAAIO,EAAI,QACR,OAAOP,EAAIA,IAAMO,EAAI,GAAKP,EAAIO,EAC/B,EA+JCE,QA7JF,SAAiBT,GACf,IAAIO,EAAI,QACR,QAASP,EAAIA,IAAMO,EAAI,GAAKP,EAAIO,GAAK,CACtC,EA2JCG,YArIF,SAAqBV,GACnB,OAAOA,EAAI,GACP,IAAO,EAAMD,EAAU,EAAU,EAAJC,IAC7B,GAAMD,EAAc,EAAJC,EAAU,GAAO,EACtC,EAkICW,SAhIF,SAAkBX,GAChB,OAAO,EAAMD,EAAU,EAAMC,EAC9B,EA+HCD,UAAWA,EACXa,UA9HF,SAAmBZ,GACjB,OAAKA,GAAK,GAAK,GAAW,IAAOa,KAAKC,KAAK,EAAId,EAAIA,GAAK,GACjD,IAAOa,KAAKC,KAAK,GAAKd,GAAK,GAAKA,GAAK,EAC7C,EA4HCe,OA1HF,SAAgBf,GACd,OAAO,EAAMa,KAAKC,KAAK,EAAMd,EAAIA,EAClC,EAyHCgB,QAvHF,SAAiBhB,GACf,OAAOa,KAAKC,KAAK,KAAQd,EAAIA,EAC9B,EAsHCiB,WApHF,SAAoBjB,GAClB,OAAOA,EAAI,GACP,EAAMA,EAAIA,EAAIA,EACd,GAAMa,KAAKK,IAAI,EAAMlB,EAAI,EAAK,GAAO,CAC1C,EAiHCmB,QA/GF,SAAiBnB,GACf,OAAOA,EAAIA,EAAIA,CAChB,EA8GCoB,SA5GF,SAAkBpB,GAChB,IAAIqB,EAAIrB,EAAI,EACZ,OAAOqB,EAAIA,EAAIA,EAAI,CACpB,EA0GCC,aAxGF,SAAsBtB,GACpB,OAAOA,EAAI,GACP,GAAMa,KAAKU,IAAI,GAAQV,KAAKW,GAAG,EAAI,EAAMxB,GAAKa,KAAKK,IAAI,EAAK,IAAQ,EAAMlB,EAAI,IAC9E,GAAMa,KAAKU,KAAK,GAAOV,KAAKW,GAAG,GAAM,EAAMxB,EAAI,EAAO,IAAQa,KAAKK,IAAI,GAAM,IAAQ,EAAMlB,EAAI,IAAQ,CAC5G,EAqGCyB,UAnGF,SAAmBzB,GACjB,OAAOa,KAAKU,IAAI,GAAOvB,EAAIa,KAAKW,GAAG,GAAKX,KAAKK,IAAI,EAAK,IAAQlB,EAAI,GACnE,EAkGC0B,WAhGF,SAAoB1B,GAClB,OAAOa,KAAKU,KAAK,IAAQvB,EAAI,GAAOa,KAAKW,GAAG,GAAKX,KAAKK,IAAI,GAAM,GAAOlB,GAAK,CAC7E,EA+FC2B,UA7FF,SAAmB3B,GACjB,OAAc,IAANA,GAAmB,IAANA,EACjBA,EACAA,EAAI,GACF,GAAOa,KAAKK,IAAI,EAAM,GAAOlB,EAAK,KACjC,GAAMa,KAAKK,IAAI,EAAK,GAAY,GAAJlB,GAAa,CACjD,EAwFC4B,OAtFF,SAAgB5B,GACd,OAAa,IAANA,EAAYA,EAAIa,KAAKK,IAAI,EAAK,IAAQlB,EAAI,GAClD,EAqFC6B,QAnFF,SAAiB7B,GACf,OAAa,IAANA,EAAYA,EAAI,EAAMa,KAAKK,IAAI,GAAM,GAAOlB,EACpD,EAkFC8B,OAhFF,SAAgB9B,GACd,OAAOA,CACR,EA+EC+B,UA7EF,SAAmB/B,GAEf,OADAA,GAAK,IACG,EAAU,GAAIA,EAAEA,GAEhB,MADRA,GACkBA,EAAE,GAAK,EAC5B,EAyECgC,OAvEF,SAAgBhC,GACd,OAAOA,EAAIA,CACZ,EAsECiC,QApEF,SAAiBjC,GACf,OAAQA,GAAKA,EAAI,EAClB,EAmECkC,WAjEF,SAAsBlC,GACpB,OAAOA,EAAI,GACP,EAAOa,KAAKK,IAAIlB,EAAG,IAClB,EAAMa,KAAKK,IAAIlB,EAAI,EAAK,GAAO,CACrC,EA8DCmC,QA5DF,SAAmBnC,GACjB,OAAOa,KAAKK,IAAIlB,EAAG,EACpB,EA2DCoC,SAzDF,SAAoBpC,GAClB,OAAOa,KAAKK,IAAIlB,EAAI,EAAK,IAAQ,EAAMA,GAAK,CAC7C,EAwDCqC,WAtDF,SAAqBrC,GACjB,OAAOA,GAAK,GAAM,EAAW,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAC5C,KAAUA,GAAK,GAAMA,EAAIA,EAAIA,EAAIA,EAAI,EAC/C,EAoDCsC,QAlDF,SAAkBtC,GAChB,OAAOA,EAAIA,EAAIA,EAAIA,EAAIA,CACxB,EAiDCuC,SA/CF,SAAmBvC,GACjB,QAASA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,CAC9B,EA8CCwC,UA5CF,SAAmBxC,GACjB,OAAQ,IAAOa,KAAK4B,IAAI5B,KAAKW,GAAGxB,GAAK,EACtC,EA2CC0C,OAzCF,SAAiB1C,GACf,IAAI2C,EAAI9B,KAAK4B,IAAIzC,EAAIa,KAAKW,GAAK,IAC/B,OAAIX,KAAK+B,IAAID,GAAK,MAAc,EACpB,EAAIA,CACjB,EAsCCE,QApCF,SAAiB7C,GACf,OAAOa,KAAKU,IAAIvB,EAAIa,KAAKW,GAAG,EAC7B,IAsCKsB,EACc,qBAAXC,QAA0BA,OAAOC,sBACpCD,OAAOC,sBACP,SAACC,GAAD,OAAcC,WAAWD,EAAU,IAAO,GAA1C,EACAE,EACc,qBAAXJ,QAA0BA,OAAOK,qBACpCL,OAAOK,qBACP,SAACC,GAAD,OAAQC,aAAaD,EAArB,EAUAE,EACM,IADNA,EAEQ,aAoKRC,EAAY,WAChB,WAAYC,GAAS,4BACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,aAAcC,EAAAA,EAAAA,GAAYF,KAAM,cAAe,GACpDA,KAAKG,UAAWD,EAAAA,EAAAA,GAAYF,KAAM,WAAY,GAC9CA,KAAKI,UAAWF,EAAAA,EAAAA,GAAYF,KAAM,WAAY,GAC9CA,KAAKK,aAAcH,EAAAA,EAAAA,GAAYF,KAAM,cAAe,GACpDA,KAAKM,SAAUJ,EAAAA,EAAAA,GAAYF,KAAM,UAAW,GAC5CA,KAAKO,WAAYL,EAAAA,EAAAA,GAAYF,KAAM,YAAa,GAChDA,KAAKQ,YAAaN,EAAAA,EAAAA,GAAYF,KAAM,aAAc,GAKlDA,KAAKS,OAAS,GAIdT,KAAKU,YAAc,GACnBV,KAAKW,iBAAmB,YAA+D,QAA5DF,OAAAA,OAA4D,MAAnD,EAAKA,OAA8C,MAAtCC,YAAAA,OAAsC,MAAxB,EAAKA,YAAmB,EAErF,EAAKE,iBAAmBH,EAASvD,KAAK2D,MAAMH,EAAc,GAC1D,EAAKI,cAAwC,EAAxB,EAAKF,iBAAuB1D,KAAKW,EACvD,EAKDmC,KAAKe,QAAU,GAIff,KAAKgB,eAAgB,EAIrBhB,KAAKiB,iBAAkB,EACvBjB,KAAKkB,oBAAsB,SAACC,GAC1B,OAAIA,GAAc,EACT,CAAC,IAAK,KAERA,EAAWC,QAAQ,GAAGC,MAAM,IACpC,EACDrB,KAAKsB,cAAgB,WACnB,OAA2B,IAApB,EAAKH,UACb,EACDnB,KAAKuB,eAAiB,WACpB,YAA4BC,IAArB,EAAKC,YACRvE,KAAK2D,MAAqB,GAAf,EAAKE,SAChB,EAAKU,WACV,EAKDzB,KAAK0B,cAAe,EACpB1B,KAAK2B,WAAa,WAChB,OAAO,EAAKD,aAAe,QAAU,MACtC,EAKD1B,KAAK4B,OAAS,IAAIC,IAAI,CACpB,CAAC,EAAG,WACJ,CAAC,GAAI,WACL,CAAC,GAAI,WACL,CAAC,GAAI,aAKP7B,KAAK8B,cAAe,EACpB9B,KAAK+B,kBAAoB,YAAiE,QAA9DH,OAAAA,OAA8D,MAArD,EAAKA,OAAgD,MAAxCE,aAAAA,OAAwC,MAAzB,EAAKA,aAAoB,EAClFE,EAAYJ,aAAkBC,IAAMD,EAAS,IAAIC,IAAII,KAAKC,MAAMN,IACtE,GAAKE,EAAL,CAKA,IAAMK,GAAc,OAAIH,GAClBI,GAAsB,OAAID,GAAaE,UAC7C,EAAKC,eAAiB,IAAIT,IAAIM,EAAYI,KAAI,SAACC,EAAOC,GAAR,MAAc,CAACD,EAAM,GAAIJ,EAAoBK,GAAG,GAAhD,IAJ7C,MAFC,EAAKH,eAAiBN,CAOzB,EACDhC,KAAK0C,UAAY,SAACvB,GAGhB,IAFA,IAAIqB,EACEL,GAAc,OAAI,EAAKG,gBACpBG,EAAI,EAAGA,EAAIN,EAAYQ,OAAQF,IAAK,CAC3C,GAAIA,IAAMN,EAAYQ,OAAS,EAAG,CAChCH,EAAQL,EAAYM,GAAG,GACvB,KACD,CACD,GAAItB,EAAagB,EAAYM,EAAI,GAAG,GAAI,CACtCD,EAAQL,EAAYM,GAAG,GACvB,KACD,CACF,MAEoBjB,IAAjB,EAAKoB,SACP,EAAKzC,SAAS0C,KAAK,CACjBnD,GAAI,EAAKkD,QACTJ,MAAAA,IAGJ,EAAKM,KAAKC,MAAMC,OAASR,EACzB,EAAKS,eAAeF,MAAMC,OAASR,EACnC,EAAKU,eAAeH,MAAMI,KAAOX,CAClC,EAKDxC,KAAKmB,WAAa,EAIlBnB,KAAKoD,SAAW,IAIhBpD,KAAKqD,WAAa,aAClBrD,KAAKsD,MAAQ,EACbtD,KAAKuD,SAAW,EAChBvD,KAAKwD,UAAW,EAChBxD,KAAKyD,gBAAiB,EACtBzD,KAAK0D,UAAW,EAEhB1D,KAAK2D,YAAc,YAA4D,IAAzDJ,EAAyD,EAAzDA,SAAUK,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,cAExD,GAAI,EAAKL,gBAAwC,oBAAfG,EAMhC,OALAA,cAEqBpC,IAAjB,EAAKoB,SACP,EAAKtC,QAAQuC,KAAK,CAAEnD,GAAI,EAAKkD,WAIjC,EAAKW,SAAWA,EAChB,EAAKM,aAAeA,EACpB,EAAKC,cAAgBA,EAErB,IAAMC,GAAqB,EAAKC,mBAAqB,EAAKV,OAASC,EAAW,EAAKD,MAC7EW,EAASF,GAAqB,IAChC,EACA,EAAKjD,cAAiBiD,EAAoB,IAAO,EAAKjD,cAC1D,EAAKgC,KAAKC,MAAMmB,iBAAmBC,OAAOF,GAE1C,IAAMG,EAAuB,EAAKlD,oBAAoB6C,GACtD,EAAKM,QAAQC,UAAYF,EAAqB,GAC9C,EAAKG,YAAYD,UAAYF,EAAqB,QAE7B5C,IAAjB,EAAKoB,SACP,EAAK3C,YAAY4C,KAAK,CACpBnD,GAAI,EAAKkD,QACTW,SAAAA,EACApC,WAAY4C,GAGjB,EAED/D,KAAKwE,gBAAkB,WACrB,GAAkC,oBAAvB,EAAKV,cAAhB,MAIqBtC,IAAjB,EAAKoB,SACP,EAAKpC,WAAWqC,KAAK,CAAEnD,GAAI,EAAKkD,UAGlC,IAAMmB,GAAqB,EAAKC,mBAAqB,EAAKV,OAAS,EAAKC,SAAW,EAAKD,MACxF,EAAKU,mBAAqB,EAAK7C,WAC/B,EAAKoC,SAAW,EAChB,EAAKD,MAAQS,EAEb,EAAKL,UAAW,EAEhB,IAAMe,EAAkB,CACtBC,gBAAiB,EAAKtB,SACtBuB,kBAAmB,EAAKtB,WACxBuB,gBAAiB,EAAKjB,YACtBkB,gBAAiB,EAAKC,kBAExB,EAAKpC,UAAU,EAAKvB,YACpB,EAAK2C,cAAcW,EApBlB,CAqBF,EACDzE,KAAK8E,iBAAmB,WACjB,EAAKpB,WACR,EAAKA,UAAW,OAEKlC,IAAjB,EAAKoB,SACP,EAAKvC,YAAYwC,KAAK,CAAEnD,GAAI,EAAKkD,UAGtC,CACF,CAlMe,4CAmMhB,SAAcmC,GACZ/E,KAAKW,iBAAiB,CACpBF,OAAQsE,IAEV/E,KAAKwE,iBACN,GAxMe,gCAyMhB,SAAmBO,GACjB/E,KAAKW,iBAAiB,CACpBD,YAAaqE,IAEf/E,KAAKwE,iBACN,GA9Me,2BA+MhB,SAAcO,GACZ/E,KAAK+B,kBAAkB,CACrBH,OAAQmD,IAEV/E,KAAKwE,iBACN,GApNe,iCAqNhB,SAAoBO,GAClB/E,KAAK+B,kBAAkB,CACrBD,aAAciD,IAEhB/E,KAAKwE,iBACN,GA1Ne,+BA2NhB,WACMxE,KAAKmB,WAAa,EACpBnB,KAAKmB,WAAa,EAGpBnB,KAAKwE,iBACN,GAjOe,8BAkOhB,WACExE,KAAKwE,iBACN,GApOe,+BAqOhB,WACExE,KAAKwE,iBACN,GAvOe,+BA2OhB,WACMxE,KAAKmB,WAAa,EACpBnB,KAAKmB,WAAa,GAIpBnB,KAAKgE,mBAAqBhE,KAAKmB,WAC/BnB,KAAKW,iBAAiB,CACpBF,OAAQT,KAAKS,OACbC,YAAaV,KAAKU,cAEpBV,KAAK+B,kBAAkB,CACrBD,aAAc9B,KAAK8B,aACnBF,OAAQ5B,KAAK4B,SAEhB,GA1Pe,8BA2PhB,WACE5B,KAAKwD,UAAW,EAChBxD,KAAK0C,UAAU1C,KAAKmB,iBAECK,IAAjBxB,KAAK4C,SACP5C,KAAKI,SAASyC,KAAK,CAAEnD,GAAIM,KAAK4C,UAjaN,WAKnB,6DAAP,CAAC,EAAM,IAJTS,WAAAA,OAIS,MAJIzD,EAIJ,MAHTwD,SAAAA,OAGS,MAHExD,EAGF,EAFToF,EAES,EAFTA,SAES,IADTtB,SAAAA,OACS,MADE,KACF,EAET,GAAKsB,EAAL,CAKA,IAAIC,EAAa1I,EAAM8G,GACnB6B,EAAiB9B,EACjB+B,EAAeH,EACfI,EAAe1B,EAGf2B,EAAY,KACZC,EAAc,KACdC,EAAY,KACZC,EAAa,EACbjC,EAAW,EAGXkC,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,EAChBC,GAAkB,EAElBhC,EAAa,KACbC,EAAe,KACfC,EAAgB,KAGd+B,EAAQ,SAARA,EAASC,GAYb,OAVAR,EAAcQ,IAAa,IAAIC,MAAOC,UAClCL,GACFJ,EAAYD,EAAcE,EAC1BG,GAAgB,GAGhBH,EAAaF,GADbC,EAAYA,GAAaD,GAKvBE,EAAaN,IAAmBQ,GAElCL,EAAYlG,EAAI0G,GAGhBtC,EAAW0B,EAAWO,EAAaN,QAEnCC,EAAa,CACX5B,SAAAA,EACAK,WAAAA,EACAC,aAAAA,EACAC,cAAAA,KAQA8B,GAEFF,GAAkB,EAClBE,GAAkB,OAGlBzG,EAAI0G,SAMFL,GAAcN,IAChBC,EAAa,CACX5B,SAAU,EACVK,WAAY,KACZC,aAAc,KACdC,cAAAA,IAGF2B,GAAiB,EACjBJ,EAAY,KAERD,GACFA,KAGL,EAGDxB,EAAa,WACX8B,GAAkB,CACnB,EAGD7B,EAAe,WACR6B,IAGLA,GAAkB,EAClBC,GAAgB,EAChBN,EAAYlG,EAAI0G,GACjB,EAGD/B,EAAgB,WAKL,6DAAP,CAAC,EAAM,IAJTa,kBAAAA,OAIS,MAJW/E,EAIX,MAHT8E,gBAAAA,OAGS,MAHS9E,EAGT,EAFTgF,EAES,EAFTA,gBAES,IADTC,gBAAAA,OACS,MADS,KACT,EACJD,IAKLK,EAAa1I,EAAMoI,GACnBO,EAAiBR,EACjBS,EAAeP,EACfQ,EAAeP,EAEfU,EAAY,KACZC,EAAa,EACbjC,EAAW,EAGNkC,GAAmBC,IACtB9B,IACAgC,GAAkB,GAIhBF,IACFA,GAAkB,EAClBL,EAAYlG,EAAI0G,IAIdJ,IACFA,GAAiB,EACjBJ,EAAYlG,EAAI0G,IAEnB,EAED,IAEER,EAAYlG,EAAI0G,EAIjB,CAHC,MAAOI,GACPC,QAAQC,MAAMF,GACdzG,EAAI6F,EACL,CAnJA,CAoJF,CA4QGe,CAN0B,CACxBhD,SAAUpD,KAAKoD,SACfC,WAAYrD,KAAKqD,WACjB2B,SAAUhF,KAAK2D,YACfD,SAAU1D,KAAK8E,kBAGlB,GAzQe,+BA0QhB,WACM9E,KAAKwD,WAGPxD,KAAKyD,gBAAiB,OAEDjC,IAAjBxB,KAAK4C,SACP5C,KAAKO,UAAUsC,KAAK,CAAEnD,GAAIM,KAAK4C,UAGjC5C,KAAK6D,eAER,GAtRe,kCAuRhB,WACE7D,KAAKyD,gBAAiB,CACvB,GAzRe,oBA0RhB,WAAS,WACP,OAAQ4C,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,SAAUD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,OAAsB,EAAdvG,KAAKS,OAAY+F,MAAqB,EAAdxG,KAAKS,SAAc4F,EAAAA,EAAAA,GAAE,SAAU,CAAEI,GAAIzG,KAAKS,OAAQiG,GAAI1G,KAAKS,OAAQkG,EAAG3G,KAAKY,iBAAkB,eAAgBZ,KAAKU,YAAayC,KAAM,cAAeyD,QAAS,MAAOC,IAAK,SAACC,GAAD,OAAS,EAAK7D,eAAiB6D,CAA/B,EAAoCR,MAAO,qBAAsBD,EAAAA,EAAAA,GAAE,SAAU,CAAEI,GAAIzG,KAAKS,OAAQiG,GAAI1G,KAAKS,OAAQkG,EAAG3G,KAAKY,iBAAkB,eAAgBZ,KAAKU,YAAa,mBAAoB,GAApB,OAAuBV,KAAKc,cAA5B,YAA6Cd,KAAKc,eAAiBqC,KAAM,cAAe,iBAAkBnD,KAAK2B,aAAckF,IAAK,SAACC,GAAD,OAAS,EAAKhE,KAAOgE,CAArB,EAA0BR,MAAO,UAAWD,EAAAA,EAAAA,GAAE,OAAQ,CAAEU,EAAG,MAAOC,EAAG,MAAO,cAAe,SAAUC,GAAI,QAAS,YAAajH,KAAKe,QAAS8F,IAAK,SAACC,GAAD,OAAS,EAAK5D,eAAiB4D,CAA/B,EAAoCR,MAAOtG,KAAKgB,cAAgB,OAAS,OAAQqF,EAAAA,EAAAA,GAAE,QAAS,CAAE,YAAarG,KAAKe,QAAS8F,IAAK,SAACC,GAAD,OAAS,EAAKzC,QAAUyC,CAAxB,EAA6BR,MAAO,aAAcD,EAAAA,EAAAA,GAAE,QAAS,CAAE,YAAarG,KAAKe,QAASuF,MAAOtG,KAAKsB,iBAAmBtB,KAAKiB,gBAC/6B,OACA,oBAAsB,MAAMoF,EAAAA,EAAAA,GAAE,QAAS,CAAE,YAAarG,KAAKuB,iBAAkBsF,IAAK,SAACC,GAAD,OAAS,EAAKvC,YAAcuC,CAA5B,EAAiCR,MAAOtG,KAAKsB,iBAAmBtB,KAAKiB,gBACvJ,OACA,iBAAkBoF,EAAAA,EAAAA,GAAE,QAAS,CAAE,YAAarG,KAAKuB,iBAAkB2F,GAAI,QAASZ,MAAO,kBAAoB,QAAQD,EAAAA,EAAAA,GAAE,OAAQ,MACpI,IAhSe,qBAiShB,WAAwB,MAAO,CAC7B,OAAU,CAAC,iBACX,YAAe,CAAC,sBAChB,OAAU,CAAC,iBACX,aAAgB,CAAC,uBACjB,WAAc,CAAC,qBACf,SAAY,CAAC,oBACb,WAAc,CAAC,qBACb,KAzSY,KA2SlBxG,EAAakD,MA7SW,gU","sources":["../node_modules/progress-ring-component/dist/esm/progress-ring.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-e115b03a.js';\n\nfunction backInOut(t) {\n  var s = 1.70158 * 1.525;\n  if ((t *= 2) < 1)\n    return 0.5 * (t * t * ((s + 1) * t - s))\n  return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2)\n}\n\nfunction backIn(t) {\n  var s = 1.70158;\n  return t * t * ((s + 1) * t - s)\n}\n\nfunction backOut(t) {\n  var s = 1.70158;\n  return --t * t * ((s + 1) * t + s) + 1\n}\n\nfunction bounceOut(t) {\n  var a = 4.0 / 11.0;\n  var b = 8.0 / 11.0;\n  var c = 9.0 / 10.0;\n\n  var ca = 4356.0 / 361.0;\n  var cb = 35442.0 / 1805.0;\n  var cc = 16061.0 / 1805.0;\n\n  var t2 = t * t;\n\n  return t < a\n    ? 7.5625 * t2\n    : t < b\n      ? 9.075 * t2 - 9.9 * t + 3.4\n      : t < c\n        ? ca * t2 - cb * t + cc\n        : 10.8 * t * t - 20.52 * t + 10.72\n}\n\nfunction bounceInOut(t) {\n  return t < 0.5\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5\n}\n\nfunction bounceIn(t) {\n  return 1.0 - bounceOut(1.0 - t)\n}\n\nfunction circInOut(t) {\n  if ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1)\n  return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1)\n}\n\nfunction circIn(t) {\n  return 1.0 - Math.sqrt(1.0 - t * t)\n}\n\nfunction circOut(t) {\n  return Math.sqrt(1 - ( --t * t ))\n}\n\nfunction cubicInOut(t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0\n}\n\nfunction cubicIn(t) {\n  return t * t * t\n}\n\nfunction cubicOut(t) {\n  var f = t - 1.0;\n  return f * f * f + 1.0\n}\n\nfunction elasticInOut(t) {\n  return t < 0.5\n    ? 0.5 * Math.sin(+13.0 * Math.PI/2 * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n    : 0.5 * Math.sin(-13.0 * Math.PI/2 * ((2.0 * t - 1.0) + 1.0)) * Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0\n}\n\nfunction elasticIn(t) {\n  return Math.sin(13.0 * t * Math.PI/2) * Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nfunction elasticOut(t) {\n  return Math.sin(-13.0 * (t + 1.0) * Math.PI/2) * Math.pow(2.0, -10.0 * t) + 1.0\n}\n\nfunction expoInOut(t) {\n  return (t === 0.0 || t === 1.0)\n    ? t\n    : t < 0.5\n      ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)\n      : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0\n}\n\nfunction expoIn(t) {\n  return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0))\n}\n\nfunction expoOut(t) {\n  return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t)\n}\n\nfunction linear(t) {\n  return t\n}\n\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1) return 0.5*t*t\n    t--;\n    return -0.5 * (t*(t-2) - 1)\n}\n\nfunction quadIn(t) {\n  return t * t\n}\n\nfunction quadOut(t) {\n  return -t * (t - 2.0)\n}\n\nfunction quarticInOut(t) {\n  return t < 0.5\n    ? +8.0 * Math.pow(t, 4.0)\n    : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0\n}\n\nfunction quarticIn(t) {\n  return Math.pow(t, 4.0)\n}\n\nfunction quarticOut(t) {\n  return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0\n}\n\nfunction qinticInOut(t) {\n    if ( ( t *= 2 ) < 1 ) return 0.5 * t * t * t * t * t\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2 )\n}\n\nfunction qinticIn(t) {\n  return t * t * t * t * t\n}\n\nfunction qinticOut(t) {\n  return --t * t * t * t * t + 1\n}\n\nfunction sineInOut(t) {\n  return -0.5 * (Math.cos(Math.PI*t) - 1)\n}\n\nfunction sineIn (t) {\n  var v = Math.cos(t * Math.PI * 0.5);\n  if (Math.abs(v) < 1e-14) return 1\n  else return 1 - v\n}\n\nfunction sineOut(t) {\n  return Math.sin(t * Math.PI/2)\n}\n\nconst eases = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  backInOut: backInOut,\n  backIn: backIn,\n  backOut: backOut,\n  bounceInOut: bounceInOut,\n  bounceIn: bounceIn,\n  bounceOut: bounceOut,\n  circInOut: circInOut,\n  circIn: circIn,\n  circOut: circOut,\n  cubicInOut: cubicInOut,\n  cubicIn: cubicIn,\n  cubicOut: cubicOut,\n  elasticInOut: elasticInOut,\n  elasticIn: elasticIn,\n  elasticOut: elasticOut,\n  expoInOut: expoInOut,\n  expoIn: expoIn,\n  expoOut: expoOut,\n  linear: linear,\n  quadInOut: quadInOut,\n  quadIn: quadIn,\n  quadOut: quadOut,\n  quartInOut: quarticInOut,\n  quartIn: quarticIn,\n  quartOut: quarticOut,\n  quintInOut: qinticInOut,\n  quintIn: qinticIn,\n  quintOut: qinticOut,\n  sineInOut: sineInOut,\n  sineIn: sineIn,\n  sineOut: sineOut\n});\n\n// Polyfills\nconst raf =\n  typeof window !== \"undefined\" && window.requestAnimationFrame\n    ? window.requestAnimationFrame\n    : (callback) => setTimeout(callback, 1000 / 60);\nconst caf =\n  typeof window !== \"undefined\" && window.cancelAnimationFrame\n    ? window.cancelAnimationFrame\n    : (id) => clearTimeout(id);\n\n/**\n * EASING ANIMATION FRAMES\n * easingType - Easing function name of `eases` module\n * duration - Transition duration in milliseconds\n * template (required) - Receives the current progress, stop, resume and restart functions\n * complete - Called after the transition completes\n */\n\nconst defaultOptions = {\n  duration: 4000,\n  easingType: \"cubicInOut\",\n};\n\nconst easingAnimationFrames = ({\n  easingType = defaultOptions.easingType,\n  duration = defaultOptions.duration,\n  template,\n  complete = null,\n} = {}) => {\n  // template is the only required parameter\n  if (!template) {\n    return;\n  }\n\n  // Transition settings\n  let easingFunc = eases[easingType];\n  let framesDuration = duration;\n  let templateFunc = template;\n  let completeFunc = complete;\n\n  // Managing progress\n  let requestId = null;\n  let currentTime = null;\n  let startTime = null;\n  let passedTime = 0;\n  let progress = 0;\n\n  // Stop, resume and restart\n  let framesComplete = false;\n  let framesCancelled = false;\n  let framesResumed = false;\n  let framesRestarted = false;\n\n  let stopFrames = null;\n  let resumeFrames = null;\n  let restartFrames = null;\n\n  // Callback function for every requestAnimationFrame\n  const frame = (timestamp) => {\n    // The latter fallback is for setTimeout and unit tests\n    currentTime = timestamp || new Date().getTime();\n    if (framesResumed) {\n      startTime = currentTime - passedTime;\n      framesResumed = false;\n    } else {\n      startTime = startTime || currentTime;\n      passedTime = currentTime - startTime;\n    }\n\n    // Continue until the time is up unless the cancel function is called\n    if (passedTime < framesDuration && !framesCancelled) {\n      // Dispatch a new request for the next frame\n      requestId = raf(frame);\n\n      // Progress value (from 0 to 1) based on the time passed\n      progress = easingFunc(passedTime / framesDuration);\n\n      templateFunc({\n        progress,\n        stopFrames,\n        resumeFrames,\n        restartFrames,\n      });\n\n      return;\n    }\n\n    // After `restartFrames` is called, the next frame that has been requested will be cancelled,\n    // and it will restart transition with new settings\n    if (framesRestarted) {\n      // Resets settings\n      framesCancelled = false;\n      framesRestarted = false;\n\n      // Restart\n      raf(frame);\n\n      return;\n    }\n\n    // Transition complete\n    if (passedTime >= framesDuration) {\n      templateFunc({\n        progress: 1,\n        stopFrames: null,\n        resumeFrames: null,\n        restartFrames,\n      });\n\n      framesComplete = true;\n      requestId = null;\n\n      if (completeFunc) {\n        completeFunc();\n      }\n    }\n  };\n\n  // Function to stop the transition\n  stopFrames = () => {\n    framesCancelled = true;\n  };\n\n  // Function to resume the transition if it's been stopped by `stopFrames`\n  resumeFrames = () => {\n    if (!framesCancelled) {\n      return;\n    }\n    framesCancelled = false;\n    framesResumed = true;\n    requestId = raf(frame);\n  };\n\n  // Function to restart transition with new settings\n  restartFrames = ({\n    restartEasingType = defaultOptions.easingType,\n    restartDuration = defaultOptions.duration,\n    restartTemplate,\n    restartComplete = null,\n  } = {}) => {\n    if (!restartTemplate) {\n      return;\n    }\n\n    // Update settings\n    easingFunc = eases[restartEasingType];\n    framesDuration = restartDuration;\n    templateFunc = restartTemplate;\n    completeFunc = restartComplete;\n\n    startTime = null;\n    passedTime = 0;\n    progress = 0;\n\n    // If there is transition already running\n    if (!framesComplete && !framesCancelled) {\n      stopFrames();\n      framesRestarted = true;\n    }\n\n    // If the transition has been stopped\n    if (framesCancelled) {\n      framesCancelled = false;\n      requestId = raf(frame);\n    }\n\n    // If the previous transition is already complete\n    if (framesComplete) {\n      framesComplete = false;\n      requestId = raf(frame);\n    }\n  };\n\n  try {\n    // Start the transtion\n    requestId = raf(frame);\n  } catch (e) {\n    console.error(e); // eslint-disable-line no-console\n    caf(requestId);\n  }\n};\n\nconst progressRingCss = \".root{display:inline-block;position:relative}circle{transform:rotate(-90deg);transform-origin:50% 50%;transition:stroke 0.4s ease 0s}text{transition:fill 0.6s ease 0s}slot{display:flex;align-items:center;justify-content:center;position:absolute;left:0;top:0;width:100%;height:100%;text-align:center}.hide{display:none}\";\n\nconst ProgressRing = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.prcProgress = createEvent(this, \"prcProgress\", 7);\n    this.prcColor = createEvent(this, \"prcColor\", 7);\n    this.prcStart = createEvent(this, \"prcStart\", 7);\n    this.prcComplete = createEvent(this, \"prcComplete\", 7);\n    this.prcStop = createEvent(this, \"prcStop\", 7);\n    this.prcResume = createEvent(this, \"prcResume\", 7);\n    this.prcRestart = createEvent(this, \"prcRestart\", 7);\n    // SHAPE\n    /**\n     * Radius of the ring\n     */\n    this.radius = 80;\n    /**\n     * Thickness of the ring\n     */\n    this.strokeWidth = 10;\n    this.setShapeSettings = ({ radius = this.radius, strokeWidth = this.strokeWidth, }) => {\n      // Caches calculation results\n      this.normalizedRadius = radius - Math.floor(strokeWidth / 2);\n      this.circumference = this.normalizedRadius * 2 * Math.PI;\n    };\n    // TEXT\n    /**\n     * Font size of the integer\n     */\n    this.intSize = 30;\n    /**\n     * Hide digits\n     */\n    this.disableDigits = false;\n    /**\n     * Hide decimal places\n     */\n    this.disableDecimals = false;\n    this.parsePercentageText = (percentage) => {\n      if (percentage <= 0) {\n        return [\"0\", \"0\"];\n      }\n      return percentage.toFixed(1).split(\".\");\n    };\n    this.isZeroPercent = () => {\n      return this.percentage === 0;\n    };\n    this.getDecimalSize = () => {\n      return this.decimalSize === undefined\n        ? Math.floor(this.intSize * 0.7)\n        : this.decimalSize;\n    };\n    // STYLE\n    /**\n     * Addes rounded linecap to the ring\n     */\n    this.roundLinecap = false;\n    this.getLinecap = () => {\n      return this.roundLinecap ? \"round\" : \"butt\";\n    };\n    // COLORS\n    /**\n     * Color steps of the ring\n     */\n    this.colors = new Map([\n      [0, \"#ff4f40\"],\n      [25, \"#ffcd40\"],\n      [50, \"#66a0ff\"],\n      [75, \"#30bf7a\"], // green\n    ]);\n    /**\n     * Inverts the color scheme\n     */\n    this.invertColors = false;\n    this.setColorsSettings = ({ colors = this.colors, invertColors = this.invertColors, }) => {\n      const colorsMap = colors instanceof Map ? colors : new Map(JSON.parse(colors));\n      if (!invertColors) {\n        this.internalColors = colorsMap;\n        return;\n      }\n      // If inverseColors prop is set to true\n      const colorsArray = [...colorsMap];\n      const colorsArrayReversed = [...colorsArray].reverse();\n      this.internalColors = new Map(colorsArray.map((color, i) => [color[0], colorsArrayReversed[i][1]]));\n    };\n    this.setColors = (percentage) => {\n      let color;\n      const colorsArray = [...this.internalColors];\n      for (let i = 0; i < colorsArray.length; i++) {\n        if (i === colorsArray.length - 1) {\n          color = colorsArray[i][1];\n          break;\n        }\n        if (percentage < colorsArray[i + 1][0]) {\n          color = colorsArray[i][1];\n          break;\n        }\n      }\n      // Emits color change event\n      if (this.eventId !== undefined) {\n        this.prcColor.emit({\n          id: this.eventId,\n          color,\n        });\n      }\n      this.ring.style.stroke = color;\n      this.ringBackground.style.stroke = color;\n      this.percentageText.style.fill = color;\n    };\n    // ANIMATION\n    /**\n     * Percentage value (mandatory)\n     */\n    this.percentage = 0;\n    /**\n     * Animation duration in miliseconds\n     */\n    this.duration = 4000;\n    /**\n     * Easing animation function name\n     */\n    this.easingType = \"quartInOut\";\n    this.start = 0;\n    this.progress = 0;\n    this.isLoaded = false;\n    this.isDisconnected = false;\n    this.complete = false;\n    // Called for every requestAnimationFrame\n    this.setProgress = ({ progress, stopFrames, resumeFrames, restartFrames, }) => {\n      // Stops the animation if the component is disconnected from the DOM\n      if (this.isDisconnected && typeof stopFrames === \"function\") {\n        stopFrames();\n        // Emits stop event\n        if (this.eventId !== undefined) {\n          this.prcStop.emit({ id: this.eventId });\n        }\n        return;\n      }\n      this.progress = progress;\n      this.resumeFrames = resumeFrames;\n      this.restartFrames = restartFrames;\n      // Shape\n      const currentPercentage = (this.internalPercentage - this.start) * progress + this.start;\n      const offset = currentPercentage >= 100\n        ? 0\n        : this.circumference - (currentPercentage / 100) * this.circumference;\n      this.ring.style.strokeDashoffset = String(offset); // strokeDashoffset value type is string\n      // Text\n      const parsedPercentageText = this.parsePercentageText(currentPercentage);\n      this.intText.innerHTML = parsedPercentageText[0];\n      this.decimalText.innerHTML = parsedPercentageText[1];\n      // Emits progress change event\n      if (this.eventId !== undefined) {\n        this.prcProgress.emit({\n          id: this.eventId,\n          progress,\n          percentage: currentPercentage,\n        });\n      }\n    };\n    // Called every time the percentage attribute gets updated\n    this.restartProgress = () => {\n      if (typeof this.restartFrames !== \"function\") {\n        return;\n      }\n      // Emits restart event\n      if (this.eventId !== undefined) {\n        this.prcRestart.emit({ id: this.eventId });\n      }\n      // Resets the progresss to 0 and set the start to be the previous percentage\n      const currentPercentage = (this.internalPercentage - this.start) * this.progress + this.start;\n      this.internalPercentage = this.percentage;\n      this.progress = 0;\n      this.start = currentPercentage;\n      // Reset the complete state\n      this.complete = false;\n      // Restarts the template function\n      const restartSettings = {\n        restartDuration: this.duration,\n        restartEasingType: this.easingType,\n        restartTemplate: this.setProgress,\n        restartComplete: this.completeCallback,\n      };\n      this.setColors(this.percentage);\n      this.restartFrames(restartSettings);\n    };\n    this.completeCallback = () => {\n      if (!this.complete) {\n        this.complete = true;\n        // Emits complete event\n        if (this.eventId !== undefined) {\n          this.prcComplete.emit({ id: this.eventId });\n        }\n      }\n    };\n  }\n  radiusUpdated(newValue) {\n    this.setShapeSettings({\n      radius: newValue,\n    });\n    this.restartProgress();\n  }\n  strokeWidthUpdated(newValue) {\n    this.setShapeSettings({\n      strokeWidth: newValue,\n    });\n    this.restartProgress();\n  }\n  colorsUpdated(newValue) {\n    this.setColorsSettings({\n      colors: newValue,\n    });\n    this.restartProgress();\n  }\n  invertColorsUpdated(newValue) {\n    this.setColorsSettings({\n      invertColors: newValue,\n    });\n    this.restartProgress();\n  }\n  percentageUpdated() {\n    if (this.percentage < 0) {\n      this.percentage = 0;\n      return;\n    }\n    this.restartProgress();\n  }\n  durationtUpdated() {\n    this.restartProgress();\n  }\n  easingTypeUpdated() {\n    this.restartProgress();\n  }\n  /**\n   * Lifecycle Methods\n   */\n  componentWillLoad() {\n    if (this.percentage < 0) {\n      this.percentage = 0;\n      return;\n    }\n    // We need internal percentage, which is not reactive to prop changes\n    this.internalPercentage = this.percentage;\n    this.setShapeSettings({\n      radius: this.radius,\n      strokeWidth: this.strokeWidth,\n    });\n    this.setColorsSettings({\n      invertColors: this.invertColors,\n      colors: this.colors,\n    });\n  }\n  componentDidLoad() {\n    this.isLoaded = true;\n    this.setColors(this.percentage);\n    // Emits restart event\n    if (this.eventId !== undefined) {\n      this.prcStart.emit({ id: this.eventId });\n    }\n    const animationSettings = {\n      duration: this.duration,\n      easingType: this.easingType,\n      template: this.setProgress,\n      complete: this.completeCallback,\n    };\n    easingAnimationFrames(animationSettings);\n  }\n  connectedCallback() {\n    if (this.isLoaded) {\n      // If the component is already loaded, that means it was loaded but\n      // disconnected from the DOM and then connected to the DOM again\n      this.isDisconnected = false;\n      // Emits complete event\n      if (this.eventId !== undefined) {\n        this.prcResume.emit({ id: this.eventId });\n      }\n      // Resumes animation that is still in progress\n      this.resumeFrames();\n    }\n  }\n  disconnectedCallback() {\n    this.isDisconnected = true;\n  }\n  render() {\n    return (h(\"div\", { class: \"root\" }, h(\"svg\", { height: this.radius * 2, width: this.radius * 2 }, h(\"circle\", { cx: this.radius, cy: this.radius, r: this.normalizedRadius, \"stroke-width\": this.strokeWidth, fill: \"transparent\", opacity: \"0.1\", ref: (el) => (this.ringBackground = el), class: \"background-ring\" }), h(\"circle\", { cx: this.radius, cy: this.radius, r: this.normalizedRadius, \"stroke-width\": this.strokeWidth, \"stroke-dasharray\": `${this.circumference} ${this.circumference}`, fill: \"transparent\", \"stroke-linecap\": this.getLinecap(), ref: (el) => (this.ring = el), class: \"ring\" }), h(\"text\", { x: \"50%\", y: \"50%\", \"text-anchor\": \"middle\", dy: \"0.5ex\", \"font-size\": this.intSize, ref: (el) => (this.percentageText = el), class: this.disableDigits ? \"hide\" : null }, h(\"tspan\", { \"font-size\": this.intSize, ref: (el) => (this.intText = el), class: \"intText\" }), h(\"tspan\", { \"font-size\": this.intSize, class: this.isZeroPercent() || this.disableDecimals\n        ? \"hide\"\n        : \"decimalPointText\" }, \".\"), h(\"tspan\", { \"font-size\": this.getDecimalSize(), ref: (el) => (this.decimalText = el), class: this.isZeroPercent() || this.disableDecimals\n        ? \"hide\"\n        : \"decimalText\" }), h(\"tspan\", { \"font-size\": this.getDecimalSize(), dx: \"0.5ex\", class: \"percentageText\" }, \"%\"))), h(\"slot\", null)));\n  }\n  static get watchers() { return {\n    \"radius\": [\"radiusUpdated\"],\n    \"strokeWidth\": [\"strokeWidthUpdated\"],\n    \"colors\": [\"colorsUpdated\"],\n    \"invertColors\": [\"invertColorsUpdated\"],\n    \"percentage\": [\"percentageUpdated\"],\n    \"duration\": [\"durationtUpdated\"],\n    \"easingType\": [\"easingTypeUpdated\"]\n  }; }\n};\nProgressRing.style = progressRingCss;\n\nexport { ProgressRing as progress_ring };\n"],"names":["bounceOut","t","t2","eases","Object","freeze","__proto__","backInOut","s","backIn","backOut","bounceInOut","bounceIn","circInOut","Math","sqrt","circIn","circOut","cubicInOut","pow","cubicIn","cubicOut","f","elasticInOut","sin","PI","elasticIn","elasticOut","expoInOut","expoIn","expoOut","linear","quadInOut","quadIn","quadOut","quartInOut","quartIn","quartOut","quintInOut","quintIn","quintOut","sineInOut","cos","sineIn","v","abs","sineOut","raf","window","requestAnimationFrame","callback","setTimeout","caf","cancelAnimationFrame","id","clearTimeout","defaultOptions","ProgressRing","hostRef","registerInstance","this","prcProgress","createEvent","prcColor","prcStart","prcComplete","prcStop","prcResume","prcRestart","radius","strokeWidth","setShapeSettings","normalizedRadius","floor","circumference","intSize","disableDigits","disableDecimals","parsePercentageText","percentage","toFixed","split","isZeroPercent","getDecimalSize","undefined","decimalSize","roundLinecap","getLinecap","colors","Map","invertColors","setColorsSettings","colorsMap","JSON","parse","colorsArray","colorsArrayReversed","reverse","internalColors","map","color","i","setColors","length","eventId","emit","ring","style","stroke","ringBackground","percentageText","fill","duration","easingType","start","progress","isLoaded","isDisconnected","complete","setProgress","stopFrames","resumeFrames","restartFrames","currentPercentage","internalPercentage","offset","strokeDashoffset","String","parsedPercentageText","intText","innerHTML","decimalText","restartProgress","restartSettings","restartDuration","restartEasingType","restartTemplate","restartComplete","completeCallback","newValue","template","easingFunc","framesDuration","templateFunc","completeFunc","requestId","currentTime","startTime","passedTime","framesComplete","framesCancelled","framesResumed","framesRestarted","frame","timestamp","Date","getTime","e","console","error","easingAnimationFrames","h","class","height","width","cx","cy","r","opacity","ref","el","x","y","dy","dx"],"sourceRoot":""}